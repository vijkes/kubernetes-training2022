    1  yum install docker -y
    2  systemctl enable docker --now
    3  systemctl status docker
    4  cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
    5  [kubernetes]
    6  name=Kubernetes
    7  baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basea
    8  rch
    9  enabled=1
   10  gpgcheck=1
   11  repo_gpgcheck=1
   12  gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
   13  https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
   14  exclude=kubelet kubeadm kubectl
   15  EOF
   16   yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
   17  yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
   18  cd /etc/yum.repos.d/
   19  ll
   20  cat kubernetes.repo
   21  yum update
   22  vim kubernetes.repo
   23  yum update
   24  yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
   25  getenforce
   26  cat /etc/selinux/config
   27  sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
   28  yum install -y kubelet-1.25.0-0 kubeadm-1.25.0-0 kubectl-1.25.0-0 --disableexcludes=kubernetes
   29  systemctl enable --now kubelet
   30  yum install kubelet
   31  yum install -y kubelet-1.25.0-0 --disableexcludes=kubernetes
   32  systemctl status kubelet
   33  systemctl enable --now kubelet
   34  cd
   35  cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
   36  overlay
   37  br_netfilter
   38  EOF
   39  modprobe overlay
   40  modprobe br_netfilter
   41  lsmod | egrep  "overlay|netfilter"
   42  cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
   43  net.bridge.bridge-nf-call-iptables  = 1
   44  net.bridge.bridge-nf-call-ip6tables = 1
   45  net.ipv4.ip_forward                 = 1
   46  EOF
   47  sysctl --system
   48  cd /usr/local
   49  ll
   50  wget https://github.com/containerd/containerd/releases/download/v1.6.14/containerd-1.6.14-linux-amd64.tar.gz
   51  ll
   52  tar -xvzg /usr/local containerd-1.6.14-linux-amd64.tar.gz
   53  tar -xvzf /usr/local containerd-1.6.14-linux-amd64.tar.gz
   54  tar -xvzf containerd-1.6.14-linux-amd64.tar.gz .
   55  tar Cxvzf /usr/local containerd-1.6.14-linux-amd64.tar.gz
   56  cd /usr/lib/systemd/system/containerd.service
   57  cd /usr/lib/systemd/system
   58  ll
   59  vim containerd.service
   60  systemctl daemon-reload
   61  systemctl enable --now containerd
   62  systemctl status containerd
   63  cd /usr/local/sbin/runc
   64  cd /usr/local/sbin/
   65  ll
   66  wget https://github.com/opencontainers/runc/releases/download/v1.1.4/runc.amd64
   67  ll
   68  install -m 755 runc.amd64 /usr/local/sbin/runc
   69  ll
   70  mkdir -p /opt/cni/bin
   71  cd
   72  wget https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz.sha256
   73  ll
   74  tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-v1.1.1.tgz.sha256
   75  ll
   76  rm cni-plugins-linux-amd64-v1.1.1.tgz.sha256
   77  wget https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz
   78  tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-v1.1.1.tgz
   79  kubeadm config images pull --v=5
   80  yum install -y kubelet-1.25.0-0 kubeadm-1.25.0-0 kubectl-1.25.0-0 --disableexcludes=kubernetes
   81  wget http://rpmfind.net/linux/fedora/linux/development/rawhide/Everything/x86_64/os/Packages/c/cri-tools-1.24.2-1.fc38.x86_64.rpm
   82  ll
   83  yum install cri-tools-1.24.2-1.fc38.x86_64.rpm
   84  rpm -Va --nofiles --nodigest
   85  wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz
   86  echo $VERSION
   87  wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz
   88  VERSION="v1.25.0"
   89  echo $VERSION
   90  wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz
   91  ll
   92  rm cri-tools-1.24.2-1.fc38.x86_64.rpm
   93  ll
   94  tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin
   95  ll
   96  kubeadm config images pull --v=5
   97   systemctl enable --now kubelet
   98   kubeadm init --pod-network-cidr=10.240.0.0/16
   99  docker info | grep -i cgroup
  100   cat /etc/docker/daemon.json
  101  docker info | grep -i cgroup
  102  yum install iproute-tc
  103  kubeadm init --pod-network-cidr=10.240.0.0/16 --ignore-preflight-errors=NumCPU
  104  systemctl enable kubelet && systemctl start kubelet
  105  cd /etc/yum.repos.d/
  106  ll
  107  rm kubernetes.repo
  108  cat <<EOF > /etc/yum.repos.d/kubernetes.repo
  109  [kubernetes]
  110  name=Kubernetes
  111  baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
  112  enabled=1
  113  gpgcheck=1
  114  repo_gpgcheck=1
  115  gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
  116  exclude=kube*
  117  EOF
  118  history
  119  yum remove -y kubelet kubeadm kubectl --disableexcludes=kubernetes
  120  yum update
  121  setenforce 0
  122  yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
  123  systemctl enable kubelet && systemctl start kubelet
  124  systemctl status kubelet
  125  kubadm
  126  kubeadm
  127  systemctl enable kubelet && systemctl start kubelet
  128  kubeadm config images pull --v=5
  129  ifconfig
  130  kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=172.31.33.142 --node-name "ip-172-31-33-142.ec2.internal" --v=9
  131  mkdir -p $HOME/.kube
  132    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  133    sudo chown $(id -u):$(id -g) $HOME/.kube/config
  134  export KUBECONFIG=/etc/kubernetes/admin.conf
  135  kubectl get ndoes
  136  kubectl get nodes
  137  kubectl get nodes -w
  138  kubectl get pods -A
  139  kubectl get coredns
  140  kubectl get pods -A
  141  kubectl logs coredns-787d4945fb-dgfc7 -n kube-system
  142  kubectl logs coredns-787d4945fb-dgfc7
  143  kubectl get pods -A
  144  kubectl get logs coredns-787d4945fb-jlzq6 -n kube-system
  145  kubectl describe logs coredns-787d4945fb-jlzq6 -n kube-system
  146  kubectl describe coredns-787d4945fb-jlzq6 -n kube-system
  147  kubectl describe coredns-787d4945fb-dgfc7 -n kube-system
  148  ps -aux | grep kube-controller-manager | grep cidr
  149  systemctl status kubelet -
  150  systemctl status kubelet -l
  151  echo 3 > /proc/sys/vm/drop_caches
  152  history
  153  kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/v0.20.2/Documentation/kube-flannel.yml
  154  kubectl get pods --A
  155  kubectl get pods --all-namespaces
  156  kubectl get nodes
  157  kubectl logs coredns-787d4945fb-dgfc7 -n kube-system
  158   kubectl edit configmap kube-flannel-cfg -n kube-system
  159  kubectl get pods --all-namespaces
  160   kubectl edit configmap kube-flannel -n kube-system
  161   kubectl edit configmap kube-flannel-ds-86db7 -n kube-system
  162  kubectl describe kube-flannel-ds-86db7
  163  kubectl get network --list
  164  kubect
  165  kubectl
  166  kube-flannel-ds-86db7
  167   cat /var/run/flannel/subnet.env
  168  kubectl get pods -l k8s-app=kube-dns -n kube-system
  169  kubectl get pods -A
  170  kubectl get nodes
  171  init 0
  172  ll
  173  kubectl get all
  174  kubectl get pods -A
  175  init 0
  176  history
  177  cat /etc/sysctl.d/k8s.conf
  178   cat /etc/docker/daemon.json
  179  systemctl status kubelet
  180  history
